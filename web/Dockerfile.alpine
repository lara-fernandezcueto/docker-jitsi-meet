ARG JITSI_REPO=jitsi
ARG BASE_TAG=latest

FROM ${JITSI_REPO}/base AS builder
RUN apk --no-cache add clang make nginx-mod-devel-kit zlib pcre-dev zlib-dev linux-pam-dev

ARG NGX_SUBS_MOD_VERS=0.6.4
ADD https://github.com/yaoweibin/ngx_http_substitutions_filter_module/archive/refs/tags/v${NGX_SUBS_MOD_VERS}.tar.gz \
  /tmp/ngx_http_substitutions_filter_module-${NGX_SUBS_MOD_VERS}.tar.gz
RUN mkdir -p /tmp/ngx_http_substitutions_filter_module-${NGX_SUBS_MOD_VERS}
RUN cd /tmp/ngx_http_substitutions_filter_module-${NGX_SUBS_MOD_VERS} && \
  tar --strip-components=1 -xf /tmp/ngx_http_substitutions_filter_module-${NGX_SUBS_MOD_VERS}.tar.gz

ARG NGX_AUTH_PAM_MOD_VERS=1.5.5
ADD https://github.com/sto/ngx_http_auth_pam_module/archive/refs/tags/v${NGX_AUTH_PAM_MOD_VERS}.tar.gz \
  /tmp/ngx_http_auth_pam_module-${NGX_AUTH_PAM_MOD_VERS}.tar.gz
RUN mkdir -p /tmp/ngx_http_auth_pam_module-${NGX_AUTH_PAM_MOD_VERS}
RUN cd /tmp/ngx_http_auth_pam_module-${NGX_AUTH_PAM_MOD_VERS} && \
  tar --strip-components=1 -xf /tmp/ngx_http_auth_pam_module-${NGX_AUTH_PAM_MOD_VERS}.tar.gz

ARG NGINX_VERS=1.24.0
ADD https://nginx.org/download/nginx-${NGINX_VERS}.tar.gz \
  /tmp/nginx-${NGINX_VERS}.tar.gz
RUN tar -C /tmp/ -xf /tmp/nginx-${NGINX_VERS}.tar.gz
 
# Build the substitutions filter module
COPY ngx_http_substitutions_filter_module.config \
  /tmp/ngx_http_substitutions_filter_module-${NGX_SUBS_MOD_VERS}/config
RUN cd /tmp/nginx-${NGINX_VERS} && \
  ./configure  --modules-path=/tmp/nginx/modules \
    --add-dynamic-module=/tmp/ngx_http_substitutions_filter_module-${NGX_SUBS_MOD_VERS}
RUN cd /tmp/nginx-${NGINX_VERS} && make && make install

# Build the authentication pam module
RUN cd /tmp/nginx-${NGINX_VERS} && \
  ./configure  --modules-path=/tmp/nginx/modules \
    --add-dynamic-module=/tmp/ngx_http_auth_pam_module-${NGX_AUTH_PAM_MOD_VERS}
RUN cd /tmp/nginx-${NGINX_VERS} && make && make install


FROM ${JITSI_REPO}/base:${BASE_TAG}

LABEL org.opencontainers.image.title="Jitsi Meet"
LABEL org.opencontainers.image.description="WebRTC compatible JavaScript application that uses Jitsi Videobridge to provide high quality, scalable video conferences."
LABEL org.opencontainers.image.url="https://jitsi.org/jitsi-meet/"
LABEL org.opencontainers.image.source="https://github.com/jitsi/docker-jitsi-meet"
LABEL org.opencontainers.image.documentation="https://jitsi.github.io/handbook/"

ADD https://raw.githubusercontent.com/acmesh-official/acme.sh/3.0.7/acme.sh /opt
COPY rootfs/ /

RUN apk --no-cache add bind nginx socat curl jq \
  nginx-mod-http-cache-purge \
  nginx-mod-http-dav-ext \
  nginx-mod-http-echo \
  nginx-mod-http-fancyindex \
  nginx-mod-http-geoip \
  nginx-mod-http-geoip2 \
  nginx-mod-http-headers-more \
  nginx-mod-http-image-filter  \
  nginx-mod-http-lua \
  nginx-mod-http-perl \
  nginx-mod-http-upload-progress \
  nginx-mod-http-upstream-fair \
  nginx-mod-http-xslt-filter \
  nginx-mod-mail \
  nginx-mod-stream \
  nginx-mod-stream-geoip \
  nginx-mod-stream-geoip2

COPY --from=builder /tmp/nginx/modules/* /etc/nginx/modules/

EXPOSE 80 443

VOLUME ["/config", "/usr/share/jitsi-meet/transcripts"]
