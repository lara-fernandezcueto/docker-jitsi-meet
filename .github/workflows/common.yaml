on:
  workflow_call:
    inputs:
      base_os:
        required: true
        type: string

jobs:
  build-bases:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container

      - name: Build base
        uses: docker/build-push-action@v2
        env:
          BASE_OS: ${{inputs.base_os}}
        with:
          context: ./base
          file: ./base/Dockerfile.${{inputs.base_os}}
          load: true
          cache-to: type=local,dest=./cache/
          tags: |
            jitsi/base:${{inputs.base_os}}
          build-args: |
            JITSI_RELEASE=unstable
            BASE_TAG=${{inputs.base_os}}

      - name: Build base-java
        uses: docker/build-push-action@v2
        env:
          BASE_OS: ${{inputs.base_os}}
        with:
          context: ./base-java
          file: ./base-java/Dockerfile.${{inputs.base_os}}
          load: true
          cache-from: type=local,src=./cache/
          build-args: |
            BASE_TAG=${{inputs.base_os}}
          tags: |
            jitsi/base-java:${{inputs.base_os}}

#  build-containers:
#    strategy:
#      matrix:
#        service:
#          - jibri
#          - jicofo
#          - jigasi
#          - jvb
#          - prosody
#          - web
#    needs: build-bases
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out code
#        uses: actions/checkout@v3
#      - name: Setup Docker Buildx
#        uses: docker/setup-buildx-action@v2
#        with:
#          driver: docker-container
#      - name: Build ${{matrix.service}}
#        uses: docker/build-push-action@v2
#        env:
#          BASE_OS: ${{inputs.base_os}}
#        with:
#          context: ./${{matrix.service}}
#          file: ./${{matrix.service}}/Dockerfile.${{inputs.base_os}}
#          load: true
#          build-args: |
#            BASE_TAG=${{inputs.base_os}}
#          tags: |
#            jitsi/${{matrix.service}}:${{inputs.base_os}}
#          cache-to: type=local,dest=cache/
#          cache-from: type=local,src=cache/
#
